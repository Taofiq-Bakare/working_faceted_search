regex_mode = 'inline'
regex_flag = re.M
regex_item = '(^PMID.*?)(?=PMID|</pre>)'

@pmid = dict(
    regex = '^PMID\s*-\s*(.*?)$',
    sql   = 'int(12) unsigned primary key'
)

@volume = dict(
    regex = '^VI\s*-\s*(.*?)$',
    sql   = 'varchar(50)'
)

@issue = dict(
    regex = '^IP\s*-\s*(.*?)$',
    sql   = 'varchar(50)'
)

@pagination = dict(
    regex = '^PG\s*-\s*(.*?)$',
    sql   = 'varchar(150)'
)

@date_of_publication = dict(
    regex = '^DP\s*-\s*(.*?)$',
    sql   = 'varchar(100)'
)

@year = dict(
    regex = '^DP\s*-\s*(\d{4}).*?$',
    sql   = 'int(4) unsigned'
)

@title = dict(
    regex_flag = re.S|re.M,
    regex = '^TI\s*-\s*(.*?)\n\w',
    callback = lambda s: stripss(s, ('[', ']')),
    sql   = 'text'
)

@book_title = dict(
    regex_flag = re.S|re.M,
    regex = '^BTI\s*-\s*(.*?)\n\w',
    callback = lambda s: stripss(s, ('[', ']')),
    sql   = 'varchar(250)'
)

@collection_title = dict(
    regex_flag = re.S|re.M,
    regex = '^CTI\s*-\s*(.*?)\n\w',
    callback = lambda s: stripss(s, ('[', ']')),
    sql   = 'varchar(250)'
)

@abstract = dict(
    regex_flag = re.S|re.M,
    regex = '^AB\s*-\s*(.*?)\n\w',
    sql   = 'text'
)

@affiliation = dict(
    regex = '^AD\s*-\s*(.*?)$',
    sql   = 'varchar(500)'
)

@journal_title_abbreviation = dict(
    regex = '^TA\s*-\s*(.*?)$',
    sql   = 'varchar(150)'
)

@journal_title = dict(
    regex = '^JT\s*-\s*(.*?)$',
    sql   = 'varchar(250)'
)

@journal_id = dict(
    regex = '^JID\s*-\s*(.*?)$',
    sql   = 'varchar(12)'
)

@pmc_id = dict(
    regex = '^PMC\s*-\s*PMC(\d+)$',
    sql   = 'int(12)'
)

@entrez_date = dict(
    regex = '^EDAT\s*-\s*(.*?)$',
    callback = lambda s: mysql_date(s, ['%Y/%m/%d %H:%M', '%Y/%m/%d']),
    sql = 'date'
)

@source = dict(
    regex = '^SO\s*-\s*(.*?)$',
    sql   = 'varchar(250)'
)
